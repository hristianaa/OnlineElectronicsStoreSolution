// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineElectronicsStore.Data;

#nullable disable

namespace OnlineElectronicsStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250317205223_FixedDiscountDates")]
    partial class FixedDiscountDates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineElectronicsStore.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = 2,
                            Name = "PC Components"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Peripherals"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Smartphones"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Audio Devices"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Gaming Accessories"
                        });
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("DiscountCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountAmount = 10.00m,
                            DiscountCode = "WELCOME10",
                            ExpiryDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            DiscountAmount = 20.00m,
                            DiscountCode = "SUMMER20",
                            ExpiryDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Powerful laptop designed for high-performance gaming.",
                            Name = "Gaming Laptop",
                            Price = 1200m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Lightweight laptop designed for business professionals.",
                            Name = "Business Laptop",
                            Price = 950m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Compact and powerful ultrabook for travel and work.",
                            Name = "UltraBook Pro",
                            Price = 1500m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "High-performance graphics card for gaming and rendering.",
                            Name = "Graphics Card RTX 4070",
                            Price = 600m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "12th Gen Intel i7 processor for enhanced performance.",
                            Name = "Intel i7 Processor",
                            Price = 400m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Reliable power supply unit for high-end gaming PCs.",
                            Name = "750W Power Supply",
                            Price = 100m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "Durable mechanical keyboard with RGB lighting.",
                            Name = "Mechanical Keyboard",
                            Price = 80m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "Ergonomic wireless mouse with precision tracking.",
                            Name = "Wireless Mouse",
                            Price = 25m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "High-resolution monitor perfect for design and gaming.",
                            Name = "27-inch 4K Monitor",
                            Price = 300m,
                            Stock = 12
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            Description = "Latest iPhone with improved camera and performance.",
                            Name = "iPhone 14 Pro",
                            Price = 1100m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 4,
                            Description = "Samsung flagship smartphone with enhanced display.",
                            Name = "Samsung Galaxy S23",
                            Price = 1000m,
                            Stock = 18
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 4,
                            Description = "Google's premium smartphone with superior AI features.",
                            Name = "Google Pixel 7",
                            Price = 850m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 5,
                            Description = "Noise-cancelling wireless headphones with premium sound.",
                            Name = "Sony WH-1000XM5",
                            Price = 300m,
                            Stock = 22
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 5,
                            Description = "Portable Bluetooth speaker with powerful bass.",
                            Name = "JBL Bluetooth Speaker",
                            Price = 150m,
                            Stock = 35
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 6,
                            Description = "Immersive gaming headset with surround sound.",
                            Name = "Gaming Headset",
                            Price = 70m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 6,
                            Description = "Realistic racing wheel for enhanced driving simulation.",
                            Name = "Racing Wheel Controller",
                            Price = 250m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 6,
                            Description = "Customizable RGB mousepad for gamers.",
                            Name = "RGB Mousepad",
                            Price = 30m,
                            Stock = 80
                        });
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DatePosted")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.ShippingDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("ShippingDetails");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            FullName = "Admin User",
                            Password = "Admin@123",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "john.doe@example.com",
                            FullName = "John Doe",
                            Password = "User@123",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.CartItem", b =>
                {
                    b.HasOne("OnlineElectronicsStore.Models.Order", null)
                        .WithMany("CartItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("OnlineElectronicsStore.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineElectronicsStore.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Discount", b =>
                {
                    b.HasOne("OnlineElectronicsStore.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Invoice", b =>
                {
                    b.HasOne("OnlineElectronicsStore.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Order", b =>
                {
                    b.HasOne("OnlineElectronicsStore.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Payment", b =>
                {
                    b.HasOne("OnlineElectronicsStore.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Product", b =>
                {
                    b.HasOne("OnlineElectronicsStore.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Review", b =>
                {
                    b.HasOne("OnlineElectronicsStore.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineElectronicsStore.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.ShippingDetails", b =>
                {
                    b.HasOne("OnlineElectronicsStore.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Wishlist", b =>
                {
                    b.HasOne("OnlineElectronicsStore.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineElectronicsStore.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.Order", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("OnlineElectronicsStore.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
